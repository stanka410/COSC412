spring.main.banner-mode=off

#enable hot swap
spring.thymeleaf.cache=false

# create n drop tables, loads import.sql
#spring.jpa.hibernate.ddl-auto=create
#create-drop

#--To generate schema
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=eventzone
#spring.datasource.username=sheilan89
#spring.datasource.password=sheilan89
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.default_schema=eventzone

spring.datasource.url=jdbc:mysql://cosc412dbmysql.cm6wg7r2mdua.us-west-2.rds.amazonaws.com:3306/cosc412db
spring.datasource.username=cosc412
spring.datasource.password=cosc1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP settings
# spring.datasource.hikari.*

#60 sec
spring.datasource.hikari.connection-timeout=60000
# max 5
spring.datasource.hikari.maximum-pool-size=5

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
logging.level.org.springframework.web: DEBUG
#logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.=error


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user_info where email=?
spring.queries.roles-query=select u.email, r.user_Role from user_info u inner join user_info_user_role ur on(u.user_info_id=ur.user_info_id) inner join user_role r on(ur.user_role_id=r.user_role_id) where u.email=?